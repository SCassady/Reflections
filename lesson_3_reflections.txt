When would you want to use a remote repository rather than keeping all your work local?

It can act as a backup in the case of a hard drive crash. Also, it can be used to collaborate with different people at different locations.


Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

You might want to review the changes in the remote before bringing them down to your local.
It also might be the case that you don't want to bring the changes down until they are working.
For example, if the build on the remote is broken, you will want to wait until it is ready.


Describe the differences between forks, clones, and branches. When would you use one instead of another?

Branches are departures from your master repository, which contain commits which
are not in said master. Clones are copies of other repositories, whether local
or remote. Forks are essentially clones on GitHub. That is, they are a repo which
is simply a copy of a different repo. They are separate from that original repo.


What is the benefit of having a copy of the last known state of the remote stored locally?

It is useful if you want to keep access to the recent remote but are currently working
on potentially breaking changes locally. It could also be useful if you want to make
some custom merge involving a local branch and the remote branch (rather than the auto merge.)


How would you collaborate without using Git or GitHub? What would be easier and what would be harder?

You could use something like DropBox or Google Drive, or a local shared folder in a LAN.
It would be easier to change and generally maneuver the directory, but it would be much harder
to deal with merge conflicts, versioning, and collaboration.


When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?

You might want to make experimental changes, changes which are potentially breaking in a branch, or focused on one purpose so that you keep it logically separated from the more mainstream changes. The other option, make all changes directly in the master, might mean your work overlaps other peoples which could be more confusing but could also be faster. Pull requests also are a convenient way for the administrators of the project to review any changes before they are placed into the project.
